{"version":3,"file":"static/js/631.0585ae22.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","redux/filter/selectors.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"item\":\"ContactsList_item__6gc1x\",\"text\":\"ContactsList_text__URA4K\",\"button\":\"ContactsList_button__EDc5e\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const { filter } = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n    const handleDelete = (id) => dispatch(deleteContact(id));\n\n    const getVisibleContacts = () => {\n    const normalize = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalize))\n    }\n\n    const visibleContacts = getVisibleContacts();\n\n    return <ul className={css.list}>{visibleContacts.map(({ id, name, number }) => (\n        <li className={css.item} key={id}>\n            <p className={css.text}>{name} : {number}</p>\n            <button className={css.button} type='button' onClick={() => handleDelete(id)}>Delete</button>\n        </li>))}\n    </ul>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrapper\":\"Filter_filter__wrapper__RVCEc\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const { filter } = useSelector(selectFilter);\n\n    const onFilterChange = (event) => dispatch(changeFilter(event.target.value))\n\n\n    return <div className={css.filter__wrapper}>\n                <label className={css.label}> Find contacts by name\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        value={filter}\n                        onChange={onFilterChange}\n                        required\n                    />\n                </label>\n            </div>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__wrapper\":\"ContactForm_form__wrapper__pRDKV\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            \n            case 'number':\n                setNumber(value)\n                break;\n        \n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        \n        const addedContacts = getAddedContacts(name);\n        (addedContacts) ?\n            Notiflix.Notify.warning(`${name} is already in contacts`) :\n            dispatch(addContact({ name: form.elements.name.value, number: form.elements.number.value }));\n\n        setName('');\n        setNumber('');\n    }\n\n    const getAddedContacts = (name) => {\n        return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    }\n\n\n        return (\n            <form className={css.form} onSubmit={handleSubmit}>\n                <div className={css.form__wrapper}>\n                    <label className={css.label}> Name\n                        <input\n                            className={css.input} \n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            value={name}\n                            onChange={handleChange}\n                            required\n                        />\n                    </label>\n                </div>\n                <div className={css.form__wrapper}>\n                    <label className={css.label}> Number\n                        <input\n                            className={css.input}\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            value={number}\n                            onChange={handleChange}\n                            required\n                        />\n                    </label>\n                </div>\n                <button type='submit' className={css.button}>Add contact</button>\n            </form>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\",\"title\":\"Contacts_title__HJPSk\",\"text\":\"Contacts_text__LjyDq\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectContacts, selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport Notiflix from \"notiflix\";\nimport { ContactsList } from \"../components/ContactsList/ContactsList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport css from \"./Contacts.module.css\";\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const items = useSelector(selectContacts);\n  \n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n  \n\n    return (\n        <div className={css.container}>\n            <h1 className={css.title}>Phonebook</h1>\n            <ContactForm />\n        \n            <h2 className={css.title}>Contacts</h2>\n            <Filter />\n            {isLoading && <div className={css.text}>Loading...</div>}\n            {error &&  Notiflix.Notify.failure('Error')}\n            {items.length > 0 && < ContactsList />}\n      </div>\n    )\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsList","useSelector","dispatch","useDispatch","visibleContacts","normalize","toLowerCase","contact","name","includes","getVisibleContacts","className","css","map","id","number","type","onClick","deleteContact","handleDelete","Filter","value","onChange","event","changeFilter","target","required","ContactForm","useState","setName","setNumber","handleChange","currentTarget","getAddedContacts","find","onSubmit","preventDefault","form","Notiflix","addContact","elements","pattern","title","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}